// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputIcon should render correctly with default state 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InputIcon
    autoComplete="off"
    defaultValue=""
    icon="down"
    iconColor="gray-l2"
    iconSize="R"
    innerRef={[Function]}
    name="Input"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder=""
    showError={false}
    type="text"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Icon
          color="gray-l2"
          icon="down"
          size="R"
        />,
        <input
          autoComplete="off"
          className="input"
          defaultValue=""
          name="Input"
          onBlur={[Function]}
          onChange={[Function]}
          placeholder=""
          type="text"
        />,
      ],
      "className": "input__icon--container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "color": "gray-l2",
          "icon": "down",
          "size": "R",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoComplete": "off",
          "className": "input",
          "defaultValue": "",
          "name": "Input",
          "onBlur": [Function],
          "onChange": [Function],
          "placeholder": "",
          "type": "text",
        },
        "ref": [Function],
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Icon
            color="gray-l2"
            icon="down"
            size="R"
          />,
          <input
            autoComplete="off"
            className="input"
            defaultValue=""
            name="Input"
            onBlur={[Function]}
            onChange={[Function]}
            placeholder=""
            type="text"
          />,
        ],
        "className": "input__icon--container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "color": "gray-l2",
            "icon": "down",
            "size": "R",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "className": "input",
            "defaultValue": "",
            "name": "Input",
            "onBlur": [Function],
            "onChange": [Function],
            "placeholder": "",
            "type": "text",
          },
          "ref": [Function],
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
